plugins {
	id 'java'
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'pl.allegro.tech.build.axion-release' version '1.12.0'
	id 'com.palantir.docker' version '0.25.0'
	id 'com.palantir.docker-run' version '0.25.0'
}

group = 'de.rauldev.spring-boot-jenkins-aws-demo'
version = '1.0.0'
sourceCompatibility = '15'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'junit:junit:4.12'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}


String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: '19910821'
String imageName = "${dockerHubUsernameProperty}/spring-boot-jenkins-aws-demo:$version"

docker{
	name imageName
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()]) //an argument map of string to string which will set --build-arg arguments to the docker build command; defaults to empty, which results in no --build-arg parameters
	noCache true
}

dockerRun {
	name project.name
	image imageName
	ports '8080:8080'
	clean true
}
